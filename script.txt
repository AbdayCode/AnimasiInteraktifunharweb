/* ====== NAV & FORM HANDLING ====== */
const stepForm = document.getElementById('step-form');
const stepWelcome = document.getElementById('step-welcome'); // BARU
const stepChoose = document.getElementById('step-choose');
const stepReligion = document.getElementById('step-religion');
const stepPlayer = document.getElementById('step-player');
const stepAdmin = document.getElementById('step-admin');
const stepSummary = document.getElementById('step-summary');

const inputName = document.getElementById('input-name');
const inputClass = document.getElementById('input-class');
const toChooseBtn = document.getElementById('to-choose');
const backToFormBtn = document.getElementById('back-to-form');
const backToChooseBtn = document.getElementById('back-to-choose');
const startLearningBtn = document.getElementById('start-learning-btn');
const studentSummary = document.getElementById('student-summary');
const revisitMessage = document.getElementById('revisit-message');
const achievementBadge = document.getElementById('achievement-badge');
const backToFormAdminBtn = document.getElementById('back-to-form-admin');

// Elemen baru untuk halaman selamat datang
const welcomeMessageEl = document.getElementById('welcome-message');
const welcomeClassEl = document.getElementById('welcome-class');

const headerInfo = document.getElementById('header-info');
const welcomeLine = document.getElementById('welcome-line');

const religionImage = document.getElementById('religion-image');
const religionTitle = document.getElementById('religion-title');
const religionDesc = document.getElementById('religion-desc');

let student = { name:'', kelas:'', agama:'' };
let visitedReligions = [];
let answeredQuestions = []; // Untuk menyimpan riwayat jawaban

/* show a step and hide others */
function showStep(stepId){
    // hide all
    stepForm.style.display = 'none';
    stepWelcome.style.display = 'none'; // BARU
    stepChoose.style.display = 'none';
    stepReligion.style.display = 'none';
    stepPlayer.style.display = 'none';
    stepAdmin.style.display = 'none';
    stepSummary.style.display = 'none';

    // show requested
    if(stepId === 'form') stepForm.style.display = 'block';
    if(stepId === 'welcome') stepWelcome.style.display = 'block'; // BARU
    if(stepId === 'choose') stepChoose.style.display = 'block';
    if(stepId === 'religion') stepReligion.style.display = 'block';
    if(stepId === 'player') stepPlayer.style.display = 'block';
    if(stepId === 'admin') stepAdmin.style.display = 'block';
    if(stepId === 'summary') stepSummary.style.display = 'block';

    // manage aria-hidden
    stepForm.setAttribute('aria-hidden', stepId==='form' ? 'false' : 'true');
    stepWelcome.setAttribute('aria-hidden', stepId==='welcome' ? 'false' : 'true'); // BARU
    stepChoose.setAttribute('aria-hidden', stepId==='choose' ? 'false' : 'true');
    stepReligion.setAttribute('aria-hidden', stepId==='religion' ? 'false' : 'true');
    stepPlayer.setAttribute('aria-hidden', stepId==='player' ? 'false' : 'true');
    stepAdmin.setAttribute('aria-hidden', stepId==='admin' ? 'false' : 'true');
    stepSummary.setAttribute('aria-hidden', stepId==='summary' ? 'false' : 'true');
}

/* validate form and go to choose */
toChooseBtn.addEventListener('click', () => {
    const nameInput = inputName.value.trim();
    const classInput = inputClass.value.trim();
    const nameKey = nameInput.toLowerCase().replace(/\s/g, '');

    if (nameKey === 'admin123') {
        showStep('admin');
        renderAdminPanel();
        return;
    }

    if (!nameInput || !classInput) {
        alert('Isi nama dan kelas terlebih dahulu.');
        return;
    }
    
    const classKey = classInput.toLowerCase().replace(/\s/g, '');
    const storageKey = `completed-${nameKey}-${classKey}`;
    const storedData = localStorage.getItem(storageKey);

    if (storedData) {
        const data = JSON.parse(storedData);
        revisitMessage.textContent = `Kamu sudah pernah mengikuti pembelajaran ini pada tanggal ${new Date(data.tanggal).toLocaleDateString()} dengan nilai ${data.nilai}.`;
        revisitMessage.style.display = 'block';

        if (data.badges && data.badges.includes('Ahli Agama')) {
            achievementBadge.style.display = 'flex';
        } else {
            achievementBadge.style.display = 'none';
        }
        return;
    }

    student.name = nameInput;
    student.kelas = classInput;
    revisitMessage.style.display = 'none';
    achievementBadge.style.display = 'none';

    // Menampilkan halaman selamat datang terlebih dahulu
    welcomeMessageEl.textContent = student.name;
    welcomeClassEl.textContent = `(Kelas ${student.kelas})`;
    showStep('welcome');

    // Setelah 3 detik, pindah ke halaman pemilihan
    setTimeout(() => {
        studentSummary.textContent = `Hai, ${student.name} — Kelas ${student.kelas}`;
        showStep('choose');
    }, 3000); // Tunda selama 3 detik
});

/* back to form */
backToFormBtn.addEventListener('click', ()=> {
    showStep('form');
});

/* back from religion to choose */
backToChooseBtn.addEventListener('click', ()=> {
    showStep('choose');
});

/* also bind the small back buttons on player header (they're separate elements) */
document.getElementById('back-to-choose-player').addEventListener('click', ()=> {
    video.pause();
    showStep('choose');
});
document.getElementById('kembali-home-btn').addEventListener('click', ()=> {
    showStep('form');
});
backToFormAdminBtn.addEventListener('click', ()=> showStep('form'));

/* religion selection logic */
document.querySelectorAll('.religion-btn').forEach(btn => {
    btn.addEventListener('click', (e) => {
        const r = e.currentTarget.dataset.religion;
        student.agama = r;

        if (!visitedReligions.includes(r)) {
            visitedReligions.push(r);
        }

        e.currentTarget.classList.add('visited');

        if (visitedReligions.length >= 5) {
            startLearningBtn.style.display = "block";
            // Tambahkan animasi pulse
            startLearningBtn.classList.add('pulse-animate');
        } else {
            startLearningBtn.style.display = "none";
            startLearningBtn.classList.remove('pulse-animate');
        }

        headerInfo.textContent = `${student.name} • Kelas ${student.kelas} • ${student.agama}`;
        welcomeLine.textContent = `Pembelajaran: ${student.agama}`;

        if(r === 'Islam'){
            religionImage.src = 'https://cnc-magazine.oramiland.com/parenting/images/masjid_di_medan.width-800.format-webp.webp';
            religionImage.alt = 'Masjid';
            religionTitle.textContent = 'Islam';
            religionDesc.textContent = 'Islam adalah agama yang beriman kepada Allah SWT dan mengikuti ajaran Nabi Muhammad SAW. Nilai-nilai utama meliputi tauhid, shalat, zakat, puasa, dan haji bagi yang mampu.Umat muslim beribadah di masjid dan menghadap kiblat';
        } else if(r === 'Kristen'){
            religionImage.src = 'https://upload.wikimedia.org/wikipedia/commons/5/51/Gereja_St._Barbara_Sawahlunto_-_Denas.jpg';
            religionImage.alt = 'Gereja';
            religionTitle.textContent = 'Kristen';
            religionDesc.textContent = 'Kristen berfokus pada ajaran Yesus Kristus, mengajarkan kasih, pengampunan, dan keselamatan melalui iman kepada Kristus. umat kristen beribadah biasanya dilakukan di gereja.';
        } else if(r === 'Konghucu'){
            religionImage.src = 'https://student-activity.binus.ac.id/kbmk/wp-content/uploads/sites/31/2021/04/Hapus.jpg';
            religionImage.alt = 'Kelenteng Konghucu';
            religionTitle.textContent = 'Konghucu';
            religionDesc.textContent = 'Konghucu adalah agama yang berlandaskan ajaran Nabi Kongzi (Confucius), menekankan kebajikan, kesopanan, dan hubungan harmonis antar manusia, Klenteng adalah rumah ibadah agama Konghucu ';
        } else if(r === 'Hindu'){
            religionImage.src = 'https://www.denpasarkota.go.id/public/uploads/wisata/datang_201303020347_PuraMekah.jpg';
            religionImage.alt = 'Kuil Hindu';
            religionTitle.textContent = 'Hindu';
            religionDesc.textContent = 'Hindu adalah tradisi yang sangat beragam yang meliputi kepercayaan pada banyak dewa, konsep dharma (kewajiban), karma (akibat perbuatan), dan siklus reinkarnasi, pura adalah rumah ibadah agama Hindu';
        } else if(r === 'Buddha'){
            religionImage.src = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTIc093Hhps5hd8-QFHDCLfNHf4YZEoFBw&s';
            religionImage.alt = 'Vihara / Patung Buddha';
            religionTitle.textContent = 'Buddha';
            religionDesc.textContent = 'Buddhisme berfokus pada ajaran Sang Buddha tentang mengatasi penderitaan melalui pencerahan (nirwana), dengan praktik meditasi dan kehidupan etis, Vihara merupakan tempat ibadah bagi umat agama Buddha';
        } else {
            religionImage.src = '';
            religionImage.alt = 'Gambar agama';
            religionTitle.textContent = r;
            religionDesc.textContent = 'Penjelasan belum tersedia.';
        }
        showStep('religion');
    });
});

/* Tombol "Mulai Belajar!" yang diperbaiki */
startLearningBtn.addEventListener('click', () => {
    if (visitedReligions.length >= 5) {
        showLoading(true);
        setTimeout(() => {
            showStep('player');
            initVideoInteractions();
            document.getElementById('header-info-player').textContent = `${student.name} • Kelas ${student.kelas} • ${student.agama}`;
            showLoading(false);
        }, 1000); // Simulasi loading 1 detik
    } else {
        alert("Kamu harus melihat deskripsi dari semua agama terlebih dahulu!");
    }
});

/* ====== ADMIN PANEL LOGIC (NEW) ====== */
const studentListEl = document.getElementById('student-list');
const noStudentsMessage = document.getElementById('no-students-message');
function renderAdminPanel(){
    studentListEl.innerHTML = '';
    const students = [];

    for (let i = 0; i < localStorage.length; i++) {
        const key = localStorage.key(i);
        if (key.startsWith('completed-')) {
            try {
                const data = JSON.parse(localStorage.getItem(key));
                data.storageKey = key;
                const scoreParts = data.nilai.split('/');
                data.numericScore = parseInt(scoreParts[0].trim());
                students.push(data);
            } catch (e) {
                console.error("Failed to parse localStorage data for key:", key, e);
            }
        }
    }

    if(students.length === 0){
        noStudentsMessage.style.display = 'block';
    } else {
        noStudentsMessage.style.display = 'none';
        students.sort((a, b) => b.numericScore - a.numericScore);
        students.forEach((s, index) => {
            const li = document.createElement('li');
            const formattedDate = new Date(s.tanggal).toLocaleDateString('id-ID', {
                year: 'numeric',
                month: 'long',
                day: 'numeric',
                hour: '2-digit',
                minute: '2-digit'
            });
            
            let rankClass = '';
            if (index === 0) rankClass = 'rank-1';
            else if (index === 1) rankClass = 'rank-2';
            else if (index === 2) rankClass = 'rank-3';

            li.innerHTML = `
                <span class="rank ${rankClass}">${index + 1}</span>
                <div class="info">
                    <strong>${s.nama} (${s.kelas})</strong>
                    <span>Agama: ${s.agama} | Nilai: ${s.nilai}</span>
                    <span>Selesai pada: ${formattedDate}</span>
                </div>
                <div class="actions">
                    <button class="reset-btn" onclick="resetStudentData('${s.storageKey}')">Reset</button>
                </div>
            `;
            studentListEl.appendChild(li);
        });
    }
}

function resetStudentData(storageKey){
    if(confirm('Apakah Anda yakin ingin mereset data siswa ini? Tindakan ini tidak bisa dibatalkan.')){
        localStorage.removeItem(storageKey);
        alert('Data siswa berhasil direset.');
        renderAdminPanel();
    }
}

/* initialize on load */
showStep('form');

/* ====== ORIGINAL VIDEO & INTERACTIVE QUESTION LOGIC ====== */
/* ====== ELEMENTS ====== */
const video = document.getElementById('myVideo');
const overlay = document.getElementById('overlay');
const questionBox = document.getElementById('question-box');
const qText = document.getElementById('q-text');
const qButtons = document.getElementById('q-buttons');
const finalScore = document.getElementById('final-score');
const progressBar = document.getElementById('progress-bar');
const progressContainer = document.getElementById('progress-container');
const loadingSpinner = document.getElementById('loading-spinner');
const summaryTitle = document.getElementById('summary-title');
const summaryMessage = document.getElementById('summary-message');
const summaryScore = document.getElementById('summary-score');
const summaryDetails = document.getElementById('summary-details');

const soundPop = document.getElementById('sound-pop');
const soundCorrect = document.getElementById('sound-correct');
const soundWrong = document.getElementById('sound-wrong');
const soundClick = document.getElementById('sound-click');

let score = 0;
const POINTS = 10;
let isQuestionActive = false;
let shownQuestions = new Set();
let questions = [
    { time:15, text: "Hari ini kita belajar tentang?", answers:[
        {text:"Toleransi", correct:true},
        {text:"Main", correct:false},
        {text:"Masak", correct:false}
    ]},
    { time:27, text: "Andi beragama apa?", answers:[
        {text:"Islam", correct:true},
        {text:"Kristen", correct:false},
        {text:"Budda", correct:false}
    ]},
    { time:32, text: "Lala beragama apa?", answers:[
        {text:"Islam", correct:false},
        {text:"Kristen", correct:false},
        {text:"Konghucu", correct:true}
    ]},
    { time:37, text: "Josep beragama apa?", answers:[
        {text:"Islam", correct:false},
        {text:"Kristen", correct:true},
        {text:"Konghucu", correct:false}
    ]},
    { time:42, text: "Matthew beragama apa?", answers:[
        {text:"Hindu", correct:false},
        {text:"Buddha", correct:true},
        {text:"Konghucu", correct:false}
    ]},
    { time:48, text: "Alex beragama apa ?", answers:[
        {text:"Hindu", correct:true},
        {text:"Buddha", correct:false},
        {text:"Konghucu", correct:false}
    ]}
];

/* ====== HELPERS ====== */
function showOverlay(show=true){
    overlay.style.display = show ? 'block' : 'none';
    overlay.setAttribute('aria-hidden', show ? 'false' : 'true');
}

function lockPage(lock=true){
    document.body.classList.toggle('locked', lock);
}

function showLoading(show) {
    loadingSpinner.style.display = show ? 'block' : 'none';
    document.body.classList.toggle('loading-overlay', show);
}

function safePlay(audioEl){
    if(!audioEl) return;
    try{
        const p = audioEl.play();
        if(p && p.catch) p.catch(()=>{/* ignore autoplay block */});
    }catch(e){}
}

function confettiEffect(){
    try{
        confetti({ particleCount: 90, spread: 65, origin: { y: 0.6 } });
    }catch(e){}
}

/* ====== VIDEO & PROGRESSBAR ====== */
function initVideoInteractions(){
    score = 0;
    shownQuestions.clear();
    isQuestionActive = false;
    answeredQuestions = [];
    progressBar.style.width = '0%';
    video.setAttribute('controls','true');
    try { video.currentTime = 0;
    } catch(e) {}
    createProgressMarkers();

    video.removeEventListener('timeupdate', videoTimeUpdateHandler);
    video.removeEventListener('seeking', videoSeekingHandler);
    video.removeEventListener('ended', showSummaryPage);

    video.addEventListener('timeupdate', videoTimeUpdateHandler);
    video.addEventListener('seeking', videoSeekingHandler);
    video.addEventListener('ended', showSummaryPage);
    try{ video.play().catch(()=>{});
    }catch(e){}
}

/* time update handler (separate function for reattach) */
function videoTimeUpdateHandler(){
    if(video.duration){
        const percent = (video.currentTime / video.duration) * 100;
        progressBar.style.width = percent + '%';
        updateProgressMarkers();
    }
    const currentSec = Math.floor(video.currentTime);
    questions.forEach(q => {
        if(!shownQuestions.has(q.time) && currentSec === q.time){
            shownQuestions.add(q.time);
            setTimeout(()=> showQuestion(q), 80);
        }
    });
}

/* seeking handler */
function videoSeekingHandler(e){
    if(isQuestionActive){
        e.preventDefault();
        if(video.dataset.lockTime) video.currentTime = Number(video.dataset.lockTime);
    }
}

function createProgressMarkers() {
    progressContainer.innerHTML = '';
    const videoDuration = video.duration;
    if (!videoDuration) return;

    questions.forEach(q => {
        const marker = document.createElement('div');
        marker.classList.add('progress-marker');
        const leftPosition = (q.time / videoDuration) * 100;
        marker.style.left = `${leftPosition}%`;
        progressContainer.appendChild(marker);
    });
}

function updateProgressMarkers() {
    const videoDuration = video.duration;
    if (!videoDuration) return;
    const markers = document.querySelectorAll('.progress-marker');
    markers.forEach(marker => {
        const markerTime = (parseFloat(marker.style.left) / 100) * videoDuration;
        if (video.currentTime >= markerTime) {
            marker.classList.add('reached');
        } else {
            marker.classList.remove('reached');
        }
    });
}

/* ====== SHOW / HIDE QUESTION ====== */
function showQuestion(q){
    isQuestionActive = true;
    video.pause();
    video.removeAttribute('controls');
    video.dataset.lockTime = q.time;

    qText.textContent = q.text;
    qButtons.innerHTML = '';
    document.getElementById('answer-feedback').style.display = 'none';
    q.answers.forEach(ans => {
        const btn = document.createElement('button');
        btn.type = 'button';
        btn.textContent = ans.text;
        btn.onclick = () => checkAnswer(btn, ans.correct, q.text);
        qButtons.appendChild(btn);
    });
    showOverlay(true);
    questionBox.style.display = 'block';
    questionBox.focus && questionBox.focus();
    questionBox.scrollTop = 0;

    lockPage(true);
    safePlay(soundPop);
}

/* ====== ANSWER CHECK ====== */
function checkAnswer(button, isCorrect, questionText){
    const feedbackEl = document.getElementById('answer-feedback');
    Array.from(qButtons.querySelectorAll('button')).forEach(b => b.disabled = true);
    
    answeredQuestions.push({
        question: questionText,
        correct: isCorrect
    });

    if(isCorrect){
        score += POINTS;
        button.classList.add('correct');
        safePlay(soundCorrect);
        feedbackEl.textContent = 'Benar!';
        feedbackEl.style.display = 'block';
        confettiEffect();
    } else {
        button.classList.add('wrong');
        safePlay(soundWrong);
        feedbackEl.textContent = 'Salah!';
        feedbackEl.style.display = 'block';
    }

    setTimeout(()=> {
        questionBox.style.display = 'none';
        showOverlay(false);
        video.setAttribute('controls', 'true');
        isQuestionActive = false;
        lockPage(false);
        try{ video.play().catch(()=>{}); }catch(e){}
    }, 2200);
}

/* ====== FINAL SCORE & SUMMARY PAGE (NEW) ====== */
function showSummaryPage() {
    const finalScoreText = `${score} / ${questions.length * POINTS}`;

    if (score === questions.length * POINTS) {
        summaryTitle.textContent = "🥳 Hebat! Nilai Sempurna!";
        summaryMessage.textContent = "Selamat! Anda adalah seorang Ahli Agama. Pertahankan terus prestasimu!";
    } else {
        summaryTitle.textContent = "🎉 Selamat! Anda telah Selesai!";
        summaryMessage.textContent = "Terima kasih telah berpartisipasi dalam pembelajaran ini. Mari terus belajar untuk jadi lebih baik!";
    }

    summaryScore.textContent = `Nilai akhir: ${finalScoreText}`;

    summaryDetails.innerHTML = '';
    answeredQuestions.forEach((q, index) => {
        const item = document.createElement('div');
        item.classList.add('summary-item');
        item.innerHTML = `
            <span>Pertanyaan ${index + 1}: ${q.question}</span>
            <span class="status ${q.correct ? 'correct' : 'wrong'}">${q.correct ? '✔' : '✖'}</span>
        `;
        summaryDetails.appendChild(item);
    });

    // Simpan data ke localStorage
    const storageKey = `completed-${student.name.toLowerCase().replace(/\s/g, '')}-${student.kelas.toLowerCase().replace(/\s/g, '')}`;
    const dataToStore = {
        nama: student.name,
        kelas: student.kelas,
        agama: student.agama,
        nilai: finalScoreText,
        numericScore: score,
        tanggal: new Date().toISOString()
    };
    if (score === questions.length * POINTS) {
        dataToStore.badges = ['Ahli Agama'];
    }
    localStorage.setItem(storageKey, JSON.stringify(dataToStore));

    // Kirim WA
    const kirimWaBtn = document.getElementById('kirim-wa-btn');
    kirimWaBtn.onclick = () => {
        const pesan = `Halo Bu/Pak Guru, saya ${student.name} (Kelas ${student.kelas}) telah menyelesaikan pembelajaran tentang pengenalan agama dengan nilai: ${finalScoreText}`;
        const url = `https://wa.me/6282287725107?text=${encodeURIComponent(pesan)}`;
        window.open(url, '_blank');
    };

    showStep('summary');
}

/* Prevent accidental touch-scroll on overlay (small screens) */
overlay.addEventListener('touchmove', function(e){ e.preventDefault(); }, { passive:false });

/* accessibility: close modals on escape */
document.addEventListener('keydown', (e)=>{
    if(e.key === 'Escape'){
        if(questionBox.style.display === 'block'){
            questionBox.style.display = 'none';
            showOverlay(false);
            video.setAttribute('controls','true');
            isQuestionActive = false;
            lockPage(false);
            try{
                video.play().catch(()=>{}); }catch(e){}
        }
    }
});

// Event listener global untuk suara klik
document.querySelectorAll('button').forEach(btn => {
  btn.addEventListener('click', () => {
    if (!btn.classList.contains('correct') && !btn.classList.contains('wrong')) {
      safePlay(soundClick);
    }
  });
});